package app.generator;

import app.model.IFigure;
import app.model.MyCircle;

/**
 * A class that generates circles based on user input.
 */
public final class CircleGenerator implements ShapeGenerator {

    /**
     * Retrieves the type of shape generated by this generator.
     *
     * @return The shape type as a string.
     */
    @Override
    public final String getShapeType() {
        return "Circle";
    }

    /**
     * Checks if the generator has enough information to create a shape.
     *
     * @return True if the generator is ready to create a shape, false otherwise.
     */
    @Override
    public final boolean isReady() {
        return points.size() > 1;
    }

    /**
     * Creates a circle shape based on the provided points.
     *
     * @return The created circle shape.
     */
    @Override
    public final IFigure createShape() {
        return new MyCircle(points.get(0).getX(),
                points.get(0).getY(),
                points.get(0).distance(points.get(1)));
    }

    /**
     * Returns a ghost shape of type IFigure based on the given coordinates.
     * If the number of points is equal to 1, a MyCircle object is created with the given coordinates.
     * If the number of points is not equal to 1, a MyCircle object is created with an example radius of 3.
     * The color of the ghost shape is set to "#000000aa".
     *
     * @param x the x-coordinate of the ghost shape
     * @param y the y-coordinate of the ghost shape
     * @return a ghost shape of type IFigure
     */
    @Override
    public final IFigure ghostShape(double x, double y)
    {
        if (points.size() == 1)
        {
            MyCircle ghost = new MyCircle(points.get(0).getX(),
                    points.get(0).getY(),
                    Math.sqrt(Math.pow(x - points.get(0).getX(),2) + Math.pow(y - points.get(0).getY(),2)));
            ghost.setColor("#000000aa");
            return ghost;
        }
        else {
            MyCircle ghost = new MyCircle(x, y, 3);
            ghost.setColor("#000000aa");
            return ghost;
        }
    }

}
